<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/twee_scale_anim_group_li"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="10dp"
    android:paddingRight="10dp"
    android:orientation="vertical">

    <View
        android:layout_width="match_parent"
        android:layout_height="10dp"
        android:layout_marginBottom="10dp"
        android:layout_marginTop="50dp"
        android:background="@color/design_default_color_error" />

    <TextView
        android:textStyle="bold"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
三、ScaleAnimation实现缩放的动画效果"
        android:textColor="#000000"
        android:textSize="18sp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="#e1e1e1"
        android:text="
主要属性及说明：\n
\n
主要属性及说明：\n
fromXScale（浮点型）属性为动画起始时X坐标上的缩放尺寸\n
fromYScale（浮点型）属性为动画起始时Y坐标上的缩放尺寸\n
toXScale（浮点型） 属性为动画结束时X坐标上的缩放尺寸\n
toYScale（浮点型） 属性为动画结束时Y坐标上的缩放尺寸\n
\n
说明: 以上四种属性值\n
0.0表示收缩到没有\n
1.0表示正常无缩放\n
值小于1.0表示收缩\n
值大于1.0表示放大\n
\n
pivotX（浮点型） 属性为动画相对于物件的X坐标的开始位置\n
pivotY（浮点型） 属性为动画相对于物件的Y坐标的开始位置\n
\n
说明:
以上两个属性值从0%-100%中取值\n
50%为物件的X或Y方向坐标上的中点位置\n
duration（长整型）属性为动画持续时间。说明: 时间以毫秒为单位\n
fillAfter（布尔型）属性当设置为true，该动画转化在动画结束后被应用\n
实例：\n
"
        android:textColor="@color/black"
        android:textSize="12sp" />

    <LinearLayout
        android:id="@+id/tween_scale_anim_java_ll"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@drawable/text_click_bk"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
方式一：通过代码的方式定义缩放动画"
            android:textColor="#66000000"
            android:textSize="12sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
→→→→→→点击查看运行效果→→→→→→"
            android:textColor="#ff8f0a"
            android:textSize="10sp" />
    </LinearLayout>

    <TextView
        android:background="@color/black"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
Animation rotateAnim = new ScaleAnimation(0.5f, 1f, 0.5f, 1f);\n
rotateAnim.setDuration(3000);\n
/* 动画结束后时否保持动画结束的状态 */\n
rotateAnim.setFillAfter(false);\n
groupLl.startAnimation(rotateAnim);
"
        android:textColor="@color/white"
        android:textSize="12sp" />


    <LinearLayout
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@drawable/text_click_bk"
        android:id="@+id/tween_scale_anim_xml_ll"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
方式二：通过XML定义缩放动画"
            android:textColor="#66000000"
            android:textSize="12sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
→→→→→→点击查看运行效果→→→→→→"
            android:textColor="#ff8f0a"
            android:textSize="10sp" />
    </LinearLayout>


    <TextView
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
1：定义XML动画文件：scale.xml"
        android:textColor="#66000000"
        android:textSize="12sp" />

    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="100dp"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@drawable/tween_scale_xml1" />

    <TextView
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
2：加载XML动画文件并将其设置到制定的View上"
        android:textColor="#66000000"
        android:textSize="12sp" />

    <TextView
        android:background="@color/black"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
//加载Xml文件中的动画\n
Animation rotateAnim = AnimationUtils.loadAnimation(context, R.anim.tween_scale);\n
groupLl.startAnimation(rotateAnim);
"
        android:textColor="@color/white"
        android:textSize="12sp" />

</LinearLayout>