<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/twee_rotate_anim_group_li"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="10dp"
    android:paddingRight="10dp"
    android:orientation="vertical">

    <View
        android:layout_width="match_parent"
        android:layout_height="10dp"
        android:layout_marginBottom="10dp"
        android:layout_marginTop="50dp"
        android:background="@color/design_default_color_error" />

    <TextView
        android:textStyle="bold"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
二、RotateAnimation实现旋转的动画效果"
        android:textColor="#000000"
        android:textSize="18sp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="#e1e1e1"
        android:text="
主要属性及说明：\n
\n
repeatCount 重复次数\n
fromDegrees 为动画起始时物件的角度\n
    当角度为负数 - 表示逆时针旋转\n
    当角度为证书 - 表示顺时针旋转\n
(负数fromDegrees——toDegrees正数:顺时针旋转)\n
(负数fromDegrees——toDegrees负数:逆时针旋转)\n
(正数fromDegrees——toDegrees正数:顺时针旋转)\n
(正数fromDegrees——toDegrees负数:逆时针旋转)\n
toDegrees属性为动画结束时物件旋转的角度可以大于360度\n
pivotX,pivotY 为动画相对于物件的X、Y坐标的开始位.
说明：以上两个属性值从0%-100%中取值,50%为物件的X或Y方向坐标上的中点位置。\n
实例：\n
\n
"
        android:textColor="@color/black"
        android:textSize="12sp" />

    <LinearLayout
        android:id="@+id/tween_rotate_anim_java_ll"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@drawable/text_click_bk"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
方式一：通过代码的方式定义旋转动画"
            android:textColor="#66000000"
            android:textSize="12sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
→→→→→→点击查看运行效果→→→→→→"
            android:textColor="#ff8f0a"
            android:textSize="10sp" />
    </LinearLayout>

    <TextView
        android:background="@color/black"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
//设置动画持续时间为3秒\n
Animation rotateAnimation=new RotateAnimation(0, 45);\n
rotateAnimation.setDuration(3000);\n
//设置动画结束后保持当前的位置（即不返回到动画开始前的位置）\n
rotateAnimation.setFillAfter(true);\n
imgShow.startAnimation(rotateAnimation);
"
        android:textColor="@color/white"
        android:textSize="12sp" />


    <LinearLayout
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@drawable/text_click_bk"
        android:id="@+id/tween_rotate_anim_xml_ll"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
方式二：通过XML定义旋转动画"
            android:textColor="#66000000"
            android:textSize="12sp" />

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="
→→→→→→点击查看运行效果→→→→→→"
            android:textColor="#ff8f0a"
            android:textSize="10sp" />
    </LinearLayout>


    <TextView
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
1：定义XML动画文件：rotate.xml"
        android:textColor="#66000000"
        android:textSize="12sp" />

    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="100dp"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@drawable/tween_rotate_xml1" />

    <TextView
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
2：加载XML动画文件并将其设置到制定的View上"
        android:textColor="#66000000"
        android:textSize="12sp" />

    <TextView
        android:background="@color/black"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="
//加载Xml文件中的动画\n
Animation rotateAnimation2=AnimationUtils.loadAnimation(this, R.anim.rotate);\n
imgShow.startAnimation(rotateAnimation2);
"
        android:textColor="@color/white"
        android:textSize="12sp" />

</LinearLayout>